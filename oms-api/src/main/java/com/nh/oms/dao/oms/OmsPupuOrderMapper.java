package com.nh.oms.dao.oms;

import com.nh.oms.model.oms.BaseAreaM;
import com.nh.oms.model.oms.OmsPupuOrder;
import org.apache.ibatis.annotations.Param;

import java.math.BigDecimal;
import java.util.List;

public interface OmsPupuOrderMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oms_pupu_order
     *
     * @mbggenerated Tue Nov 20 19:18:42 CST 2018
     */
    int deleteByPrimaryKey(Long iid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oms_pupu_order
     *
     * @mbggenerated Tue Nov 20 19:18:42 CST 2018
     */
    int insert(OmsPupuOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oms_pupu_order
     *
     * @mbggenerated Tue Nov 20 19:18:42 CST 2018
     */
    int insertSelective(OmsPupuOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oms_pupu_order
     *
     * @mbggenerated Tue Nov 20 19:18:42 CST 2018
     */
    OmsPupuOrder selectByPrimaryKey(Long iid);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oms_pupu_order
     *
     * @mbggenerated Tue Nov 20 19:18:42 CST 2018
     */
    int updateByPrimaryKeySelective(OmsPupuOrder record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table oms_pupu_order
     *
     * @mbggenerated Tue Nov 20 19:18:42 CST 2018
     */
    int updateByPrimaryKey(OmsPupuOrder record);

    OmsPupuOrder getInfoByOrderNo(String orderNo);

    int updateOrderSynState(String orderNo);

    int updateSaleOutQty(OmsPupuOrder omsPupuOrder);

    /**
     * 噗噗管订单出库时根据订单号查询销售类型
     *
     * @param orderNo 订单号
     * @return 销售类型 1:销售，2:寄售
     */
    String selectChannelTypeByOrderN(String orderNo);

    int updateExchangeSynState(String orderNo);

    String getExchangeQty(String orderNo);

    /**
     * 查询部分发货部分出库
     *
     * @param orderNo
     * @return
     */
    int partDeliveryAndPartSaleOut(@Param("orderNo") String orderNo, @Param("saleoutQty") BigDecimal saleoutQty);

    /**
     * 查询全部发货部分出库
     *
     * @param orderNo
     * @return
     */
    int wholeDeliveryAndPartSaleOut(@Param("orderNo") String orderNo, @Param("saleoutQty") BigDecimal saleoutQty);

    /**
     * 查询全部出库
     *
     * @param orderNo
     * @return
     */
    int wholeDelivery(@Param("orderNo") String orderNo, @Param("saleoutQty") BigDecimal saleoutQty);

    /**
     * 根据订单号更新订单状态
     *
     * @param omsPupuOrderList
     */
    void updateByOrderNo(List<OmsPupuOrder> omsPupuOrderList);

    void updateOrderState(OmsPupuOrder omsPupuOrder);

    /*
    获取渠道编码根据订单号
    * */
    String getChannelCodeByOrder(String orderNo);

    String getCusCodeByChannel(String channelCode);

    String getEmpNoByUserId(String userId);

    String getCreateTime(String orderNo);

    List<BaseAreaM> getAreaAddress(List<String> list);

    String getChannelCodeByPMOrder(String orderNo);
}